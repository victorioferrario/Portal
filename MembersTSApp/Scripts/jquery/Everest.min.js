/*!
 * Everest JavaScript Library v2.0.0
 * http://www.alessiodicrescenzo.com/
 *
 *
 * Released under the GNU license
 *
 * Date: 2015-07-28T16:01Z
 */
; window.Everest = (function () { function g(h) { this.params = h; this.init = function () { this.params.offsetHeight = (this.params.offsetHeight !== undefined) ? this.params.offsetHeight : true; this.params.verticalAlign = (this.params.verticalAlign !== undefined) ? this.params.verticalAlign : false; this.params.rowSelector = (this.params.rowSelector !== undefined && this.params.rowSelector.length > 0) ? this.params.rowSelector : "div"; this.params.colSelector = (this.params.colSelector !== undefined && this.params.colSelector.length > 0) ? this.params.colSelector : "div"; this.params.responsiveAvailableWidth = (this.params.responsiveAvailableWidth !== undefined) ? this.params.responsiveAvailableWidth : null; this.rows = document.querySelectorAll(this.params.rowSelector); this.cols = []; this.resizeSemaphore = true; this.bindResize = true; this.checkScreenWidth = function () { if (this.params.responsiveAvailableWidth !== null) { var q = window.innerWidth; for (var p = 0, o = this.params.responsiveAvailableWidth.length; p < o; p++) { if (q <= this.params.responsiveAvailableWidth[p].max && q >= this.params.responsiveAvailableWidth[p].min) { return true } } return false } else { return true } }; this.responsiveAvailable = this.checkScreenWidth(); this.initialize = function () { this.bindResize = true; this.init() }; this.destroy = function () { b(this.cols); if (this.params.verticalAlign !== false) { a(this.cols) } window.onresize = null }; this.stop = function () { b(this.cols); if (this.params.verticalAlign !== false) { a(this.cols) } }; this.reload = function () { b(this.cols); if (this.params.verticalAlign !== false) { a(this.cols) } this.init() }; for (var m = 0, k = this.rows.length; m < k; m++) { this.cols[m] = this.rows[m].querySelectorAll(this.params.colSelector) } if (this.responsiveAvailable) { for (var m = 0, k = this.cols.length; m < k; m++) { var j = 0; j = (this.params.offsetHeight) ? e(this.cols[m]) : f(this.cols[m]); c(j, this.cols[m]); if (this.params.verticalAlign !== false) { d(this.cols[m], this.params.verticalAlign) } } } if (this.params.reloadOnResize) { var n = this; if (n.bindResize) { n.bindResize = false; window.onresize = function (i) { if (n.resizeSemaphore) { n.resizeSemaphore = false; setTimeout(function () { if (n.params.responsiveAvailableWidth !== null) { var l = window.innerWidth; n.responsiveAvailable = n.checkScreenWidth(); n.reload() } else { n.reload() } n.resizeSemaphore = true }, 1000) } } } } }; this.init() } function e(j) { var h = 0; for (var m = 0, k = j.length; m < k; m++) { if (h < j[m].offsetHeight) { h = j[m].offsetHeight } } return h } function f(j) { var h = 0; for (var m = 0, k = j.length; m < k; m++) { if (h < j[m].clientHeight) { h = j[m].clientHeight } } return h } function c(h, m) { for (var k = 0, j = m.length; k < j; k++) { m[k].style.height = h + "px" } } function d(n, k) { for (var j = 0, h = n.length; j < h; j++) { var m = n[j].innerHTML; n[j].innerHTML = " "; n[j].innerHTML = '<div style="width:100%; height:100%;"><div style="height:100%; width:100%; display:table;"><div class="verticalFitContent" style="display:table-cell; vertical-align:' + k + '; width:100%; position:relative;"> ' + m + "</div></div></div>" } } function b(p) { for (var o = 0, h = p.length; o < h; o++) { for (var n = 0, m = p[o].length; n < m; n++) { p[o][n].removeAttribute("style") } } } function a(q) { for (var o = 0, h = q.length; o < h; o++) { for (var n = 0, m = q[o].length; n < m; n++) { var p = q[o][n].querySelector(".verticalFitContent"); if (p) { p = p.innerHTML; q[o][n].innerHTML = p } } } } return g }());